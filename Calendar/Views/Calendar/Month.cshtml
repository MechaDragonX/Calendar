@model IEnumerable<Calendar.Models.EventViewModel>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/calendar")

@{
    int daysInMonth = DateTime.DaysInMonth(ViewBag.Year, ViewBag.Month);
    DateTime firstDay = new DateTime(ViewBag.Year, ViewBag.Month, 1);
    DateTime lastDay = new DateTime(ViewBag.Year, ViewBag.Month, daysInMonth);

    ViewBag.Title = firstDay.ToString("MMMM yyy");

    int numberOfWeeks = 4 + (daysInMonth % 7 != 0 ? 1 : 0);
    int firstDayOfWeek = (int) firstDay.DayOfWeek;
    if (firstDay.DayOfWeek != DayOfWeek.Sunday || lastDay.DayOfWeek != DayOfWeek.Saturday)
    {
        numberOfWeeks++;
    }
}

<h2>@ViewBag.Title</h2>
<!--Events Table-->
<h3>Events</h3>

@if (Model.Count() > 0)
{
    <p>
        @Html.ActionLink("Create a new event.", "Create")
    </p>
    <table class="table table-condensed table-fixedHead">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                Start Time
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                End Time
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsAllDay)
            </th>
            <th>
                Repeating?
            </th>
            <th>
                Repeating Frequency
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate.TimeOfDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate.TimeOfDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsAllDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsRepeating)
                </td>
                <td>
                    @{
                        if (item.Frequency == Calendar.Models.RepeatingFrequency.None)
                        {
                            string text = "Does not Repeat.";
                            @text
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.Frequency)
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id, })
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </table>
}
else
{
    <h3>There are no events! Click @Html.ActionLink("here", "CreateEvent", "Calendar", new { area = "" }, null) to make one.</h3>
}

<hr />

<!--Calendar-->

@{
    int year = ViewBag.Year;
    int month = ViewBag.Month;

    string Previous(int currentYear, int currentMonth)
    {
        int newMonth = currentMonth - 1;
        int newYear = currentYear;

        if (newMonth == 0)
        {
            newYear--;
            newMonth = 12;
        }
        return @Url.Action("Month", "Calendar", new { year = newYear, month = newMonth });
    }

    string Next(int currentYear, int currentMonth)
    {
        int newMonth = currentMonth + 1;
        int newYear = currentYear;

        if (newMonth > 12)
        {
            newYear++;
            newMonth = 1;
        }
        return @Url.Action("Month", "Calendar", new { year = newYear, month = newMonth });
    }
}
<div class="col-lg-11">
    <input type="button" value="&laquo" onclick="location.href='@Previous(year, month)'" />
</div>
<div class="col-lg-1">
    <input type="button" value="&raquo" onclick="location.href='@Next(year, month)'" />
</div>

<div>
    @{
        IEnumerable<SelectListItem> dropDownList = new List<SelectListItem>
{
new SelectListItem { Text = "Month", Value = "Month:" + ViewBag.Year + ":" + ViewBag.Month },
new SelectListItem { Text = "Week", Value = "Week:" + ViewBag.Year + ":" + ViewBag.Month }
};
    }
    @Html.DropDownList("selector", dropDownList, "Select View")
</div>

<table class="table">
    <tr>
        @{ string weekDay = "";
            for (int i = 0; i <= (int)DayOfWeek.Saturday; i++)
            {
                <th class="col-md-1">
                    @{
                        weekDay = ((DayOfWeek)i).ToString();
                        @weekDay
                    }
                </th>
            }
        }
    </tr>
    @{
        int count = 0;
        int day = 1;
        DateTime current = new DateTime(ViewBag.Year, ViewBag.Month, day);
        int previous = 0;
        int after = 0;
        for (int i = 0; i < numberOfWeeks; i++)
        {
            <tr>
                @{
                    for (int j = 0; j < 7; j++)
                    {
                        if (count < firstDayOfWeek)
                        {
                            <td style="color:gray">
                                @{ 
                                    previous = DateTime.DaysInMonth(ViewBag.Year, ViewBag.Month - 1) - (firstDayOfWeek - (count + 1));
                                    @previous
                                }
                            </td>
                        }
                        else
                        {
                            if (day <= daysInMonth)
                            {
                                if (current.Year == DateTime.Now.Year && current.Month == DateTime.Now.Month && current.Day == DateTime.Now.Day)
                                {
                                    <td style="border-left: 6px solid #1e90ff; background-color: #87ceff; padding-left: 0px; padding-right: 0px">
                                        <div>
                                            @day
                                        </div>
                                        @{
                                            foreach (var item in Model)
                                            {
                                                if ((item.StartDate.Year == current.Year && item.StartDate.Month == current.Month && item.StartDate.Day == current.Day) || (item.EndDate.Year == current.Year && item.EndDate.Month == current.Month && item.EndDate.Day == current.Day))
                                                {
                                                    if (current.Day == item.StartDate.Day)
                                                    {
                                                        <div style="background-color: #ff6347; border-top: 1px solid black; border-bottom: 1px solid black; border-left: 1px solid black">
                                                            @Html.ActionLink(item.Name, "Day", "Calendar", new { year = (current.Year).ToString().ToLower(), month = (current.Month).ToString().ToLower(), day = (current.Day).ToString().ToLower() }, null)
                                                        </div>
                                                    }
                                                    else if (current.Day == item.EndDate.Day)
                                                    {
                                                        <div style="background-color: #ff6347; border-top: 1px solid black; border-bottom: 1px solid black; border-right: 1px solid black">&nbsp;</div>
                                                    }
                                                }
                                                else if (current > item.StartDate && current < item.EndDate)
                                                {
                                                    <div style="background-color: #ff6347; border-top: 1px solid black; border-bottom: 1px solid black">&nbsp;</div>
                                                }
                                            }
                                        }
                                    </td>
                                }
                                else if (current.DayOfWeek.Equals(DayOfWeek.Saturday) || current.DayOfWeek.Equals(DayOfWeek.Sunday) && !(current.Year == DateTime.Now.Year && current.Month == DateTime.Now.Month && current.Day == DateTime.Now.Day))
                                {
                                    <td style="background-color: #00ee76; padding-left: 0px; padding-right: 0px">
                                        <div>
                                            @day
                                        </div>
                                        @{
                                            foreach (var item in Model)
                                            {
                                                if ((item.StartDate.Year == current.Year && item.StartDate.Month == current.Month && item.StartDate.Day == current.Day) || (item.EndDate.Year == current.Year && item.EndDate.Month == current.Month && item.EndDate.Day == current.Day))
                                                {
                                                    if (current.Day == item.StartDate.Day)
                                                    {
                                                        <div style="background-color: #ff6347; border-top: 1px solid black; border-bottom: 1px solid black; border-left: 1px solid black">
                                                            @Html.ActionLink(item.Name, "Day", "Calendar", new { current.Year, current.Month, current.Day }, null)
                                                        </div>
                                                    }
                                                    else if (current.Day == item.EndDate.Day)
                                                    {
                                                        <div style="background-color: #ff6347; border-top: 1px solid black; border-bottom: 1px solid black; border-right: 1px solid black">&nbsp;</div>
                                                    }
                                                }
                                                else if (current > item.StartDate && current < item.EndDate)
                                                {
                                                    <div style="background-color: #ff6347; border-top: 1px solid black; border-bottom: 1px solid black">&nbsp;</div>
                                                }
                                            }
                                        }
                                    </td>
                                }
                                else
                                {
                                    <td style="padding-left: 0px; padding-right: 0px">
                                        <div>
                                            @day
                                        </div>
                                        @{
                                            foreach (var item in Model)
                                            {
                                                if ((item.StartDate.Year == current.Year && item.StartDate.Month == current.Month && item.StartDate.Day == current.Day) || (item.EndDate.Year == current.Year && item.EndDate.Month == current.Month && item.EndDate.Day == current.Day))
                                                {
                                                    if (current.Day == item.StartDate.Day)
                                                    {
                                                        <div style="background-color: #ff6347; border-top: 1px solid black; border-bottom: 1px solid black; border-left: 1px solid black">
                                                            @Html.ActionLink(item.Name, "Day", "Calendar", new { current.Year, current.Month, current.Day }, null)
                                                        </div>
                                                    }
                                                    else if (current.Day == item.EndDate.Day)
                                                    {
                                                        <div style="background-color: #ff6347; border-top: 1px solid black; border-bottom: 1px solid black; border-right: 1px solid black">&nbsp;</div>
                                                    }
                                                }
                                                else if (current > item.StartDate && current < item.EndDate)
                                                {
                                                    <div style="background-color: #ff6347; border-top: 1px solid black; border-bottom: 1px solid black">&nbsp;</div>
                                                }
                                            }
                                        }
                                    </td>
                                }
                            }
                            else
                            {
                                <td style="color:gray">
                                    @{
                                        after = (count - (firstDayOfWeek + daysInMonth)) + 1;
                                        @after
                                    }
                                </td>
                            }
                            day++;
                            if (day <= daysInMonth)
                            {
                                current = new DateTime(ViewBag.Year, ViewBag.Month, day);
                            }
                        }
                        count++;
                    }
                }
            </tr>
        }
    }
</table>
