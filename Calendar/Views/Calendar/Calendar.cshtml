@model IEnumerable<Calendar.Models.EventViewModel>

@{
    int daysInMonth = DateTime.DaysInMonth(ViewBag.Year, ViewBag.Month);
    DateTime firstDay = new DateTime(ViewBag.Year, ViewBag.Month, 1);
    DateTime lastDay = new DateTime(ViewBag.Year, ViewBag.Month, daysInMonth);

    ViewBag.Title = firstDay.ToString("MMMM yyy");

    int numberOfWeeks = 4;
    int firstDayOfWeek = (int)firstDay.DayOfWeek;
    if (firstDay.DayOfWeek != DayOfWeek.Sunday || lastDay.DayOfWeek != DayOfWeek.Saturday)
    {
        numberOfWeeks++;
    }
}

<h2>@ViewBag.Title</h2>

@{
    int year = ViewBag.Year;
    int month = ViewBag.Month;

    string Previous(int currentYear, int currentMonth)
    {
        int newMonth = currentMonth - 1;
        int newYear = currentYear;

        if (newMonth == 0)
        {
            newYear--;
            newMonth = 12;
        }
        return @Url.Action("Calendar", "Calendar", new { year = newYear, month = newMonth });
    }

    string Next(int currentYear, int currentMonth)
    {
        int newMonth = currentMonth + 1;
        int newYear = currentYear;

        if (newMonth > 12)
        {
            newYear++;
            newMonth = 1;
        }
        return @Url.Action("Calendar", "Calendar", new { year = newYear, month = newMonth });
    }
}
<div class="col-lg-8">
    <input type="button" value="&laquo" onclick="location.href='@Previous(year, month)'" />
</div>
<dic class="col-lg-2">
    <input type="button" value="&raquo" onclick="location.href='@Next(year, month)'" />
</dic>

<table class="table">
    <tr>
        @{ string weekDay = "";
            for (int i = 0; i <= (int)DayOfWeek.Saturday; i++)
            {
                <th>
                    @{
                        weekDay = ((DayOfWeek)i).ToString();
                        @weekDay
                    }
                </th>
            }
        }
    </tr>
@{
    int count = 0;
    int day = 1;
    DateTime current = new DateTime(ViewBag.Year, ViewBag.Month, day);
    for (int i = 0; i < numberOfWeeks; i++)
    {
        <tr>
            @{
            for (int j = 0; j < 7; j++)
            {
                if (count < firstDayOfWeek)
                {
                        <td>
                            &nbsp;
                        </td>
                }
                else
                {
                    if (day <= daysInMonth)
                    {
                        if (current.Year == DateTime.Now.Year && current.Month == DateTime.Now.Month && current.Day == DateTime.Now.Day)
                        {
                        <td style="border-left: 6px solid #1e90ff; background-color: #87ceff;">
                            <div>
                                @day
                            </div>
                            @{
                                foreach (var item in Model)
                                {
                                    if ((item.StartDate.Year == current.Year || item.EndDate.Year == current.Year) && (item.StartDate.Month == current.Month || item.EndDate.Month == current.Month) && (item.StartDate.Day == current.Day || item.EndDate.Day == current.Day))
                                    {
                                        <div>
                                            @Html.ActionLink(item.Name, "Day", "Calendar", new { current.Year, current.Month, current.Day }, null);
                                        </div>
                                    }
                                }
                            }
                        </td>
                        }
                        else
                        {
                        <td>
                            <div>
                                @day
                            </div>
                            @{
                                foreach (var item in Model)
                                {
                                    if (item.StartDate == current || item.EndDate == current)
                                    {
                                        <div style="background-color:red; border: 1px solid black;">
                                            @Html.ActionLink(item.Name, "Day", "Calendar", new { current.Year, current.Month, current.Day }, null);
                                        </div>
                                    }
                                }
                             }
                        </td>
                        }
                    }
                    else
                    {
                        <td>
                            &nbsp;
                        </td>
                    }
                    day++;
                    if (day <= daysInMonth)
                    {
                        current = new DateTime(ViewBag.Year, ViewBag.Month, day);
                    }
                }
                count++;
            }
            }
        </tr>
    }
}
</table>

@{
    MvcHtmlString checkForEvents()
    {
        foreach (var item in Model)
        {
            if (item.StartDate.Day == current.Day || item.EndDate.Day == current.Day)
            {
                return Html.ActionLink(day.ToString(), "Day", "Calendar", new { current.Year, current.Month, current.Day }, new { @style = "font:bold;" });
            }
        }
        return new MvcHtmlString(current.Day.ToString());
    }
}